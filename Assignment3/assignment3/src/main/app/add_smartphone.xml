<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:twitter="http://www.mulesoft.org/schema/mule/twitter"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.7.2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd 
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd 
http://www.mulesoft.org/schema/mule/twitter http://www.mulesoft.org/schema/mule/twitter/current/mule-twitter.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <sub-flow name="tweet_statistics_subflow">
        <logger message="Starting subflow for tweeting statistics" level="INFO" doc:name="Logger"/>
        <db:update config-ref="MySQL_Configuration" doc:name="Update number of sent tweets in Database">
            <db:parameterized-query><![CDATA[UPDATE statistics SET num_sent_tweets = num_sent_tweets + 1;]]></db:parameterized-query>
        </db:update>
        <db:select config-ref="MySQL_Configuration" doc:name="Select Statistics from Database">
            <db:parameterized-query><![CDATA[SELECT * FROM statistics;]]></db:parameterized-query>
        </db:select>
        <set-payload value="#[message.payload[0]]" doc:name="Set Statistics Payload"/>
        <logger message="statistics output: #[message.payload]" level="INFO" doc:name="Logger"/>
        <set-payload value="#[new org.mule.el.datetime.DateTime().toString();] Statistics: #[message.payload.'num_updates_to_smartphones'] updates, #[message.payload.'num_cur_smartphones'] smartphones, #[message.payload.'num_sent_emails'] emails, #[message.payload.'num_sent_tweets'] tweets" doc:name="Set Tweet Payload"/>
        <logger message="twitter input: #[message.payload]" level="INFO" doc:name="Logger"/>
        <twitter:update-status config-ref="Twitter" status="#[message.payload]" doc:name="Tweet Statistics"/>
        <logger message="twitter output: #[message.payload]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="unmarshall_and_insert_smartphone_subflow">
        <logger message="smartphones input: #[message.payload]" level="INFO" doc:name="Logger"/>
        <mulexml:jaxb-xml-to-object-transformer returnClass="generated.Smartphone" ignoreBadInput="true" jaxbContext-ref="JAXB_Context" doc:name="XML to JAXB Object"/>
        <set-variable variableName="smartphone" value="#[message.payload]" doc:name="Set Smartphone Variable"/>
        <custom-transformer class="generated.FilterSmartphone" doc:name="Check if smartphone is relevant Java" returnClass="java.lang.Boolean"/>
        <logger message="isRelevant: #[message.payload]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Should insert smartphone into Database">
            <when expression="payload.equals(true)">
                <logger message="smartphone input: #[message.payload]" level="INFO" doc:name="Logger"/>
                <db:update config-ref="MySQL_Configuration" doc:name="Update number of updates to smartphones Database">
                    <db:parameterized-query><![CDATA[UPDATE statistics SET 
num_updates_to_smartphones = num_updates_to_smartphones + 1, 
num_cur_smartphones = (SELECT COUNT(*) FROM smartphones);]]></db:parameterized-query>
                </db:update>
                <db:insert config-ref="MySQL_Configuration" doc:name="Insert Smartphone into Database">
                    <db:parameterized-query><![CDATA[INSERT INTO smartphones (technical_data, url, name, brand, currency, summary_data, price) VALUES (#[flowVars.smartphone.getTechnicalData().toString()], #[flowVars.smartphone.getUrl()], #[flowVars.smartphone.getName()], #[flowVars.smartphone.getBrand()], #[flowVars.smartphone.getCurrency()], #[flowVars.smartphone.getSummaryData()], #[flowVars.smartphone.getPrice()]);]]></db:parameterized-query>
                </db:insert>
                <logger message="smartphone output: #[message.payload]" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <logger message="Smartphone did not meet the requierments" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <logger message="smartphones output: #[message.payload]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="add_smartphone_and_send_tweet_subflow">
        <flow-ref name="unmarshall_and_insert_smartphone_subflow" doc:name="Unmarshall and Insert Smartphone Subflow"/>
        <choice doc:name="Should tweet about insertion">
            <when expression="payload.equals(1)">
                <flow-ref name="tweet_statistics_subflow" doc:name="Tweet Statistics Subflow"/>
            </when>
            <otherwise>
                <logger message="add smartphones fail" level="ERROR" doc:name="Logger"/>
            </otherwise>
        </choice>
        <set-payload value="'#[message.payload]'" doc:name="Set Payload"/>
    </sub-flow>

    <flow name="file_add_smartphone">
        <file:inbound-endpoint path="/Users/aclima/Documents/Repositories/Systems_Integration/Assignment3/assignment3/smartphones" connector-ref="File" pollingFrequency="10000" fileAge="5000" responseTimeout="10000" doc:name="File"/>
        <flow-ref name="add_smartphone_and_send_tweet_subflow" doc:name="Add Smartphone and Send Tweet Subflow"/>
        <exception-strategy ref="Global_Catch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>

</mule>
