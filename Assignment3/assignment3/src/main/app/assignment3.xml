<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers"
	xmlns:twitter="http://www.mulesoft.org/schema/mule/twitter" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:smtps="http://www.mulesoft.org/schema/mule/smtps"
	xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/smtps http://www.mulesoft.org/schema/mule/smtps/current/mule-smtps.xsd
http://www.mulesoft.org/schema/mule/twitter http://www.mulesoft.org/schema/mule/twitter/current/mule-twitter.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    
    <db:mysql-config name="MySQL_Configuration"  doc:name="MySQL Configuration" database="mailinglist" host="localhost" password="generatedata" port="3306" user="generatedata">
        <db:connection-properties>
            <db:property key="useSSL" value="false"/>
        </db:connection-properties>
    </db:mysql-config>
    
    <smtps:connector name="smtpsConnector" doc:name="SMTP">
		<smtps:tls-client path="clientKeystore"
			storePassword="mulepassword" />
		<smtps:tls-trust-store path="greenmail-truststore"
			storePassword="password" />
	</smtps:connector>	
	
	<smtp:gmail-connector name="Gmail" validateConnections="true" doc:name="Gmail"/>
	
    <twitter:config name="Twitter" accessKey="4517518408-3y5AGk1NNzgkDK50m4BunRZYp5PcSXUEwBpp1Gb" accessSecret="6i3h29N3MYYFB3OyPSbqZ5ZBpgafosRvlrWqJGwYczTHk" consumerKey="8zjMgss0csnIDq3TFSqmb91Qv" consumerSecret="DNEsnrLJtlBJDhe1BkrqADSYqvQ8FqwjLWVtgG9Eh4WqIfbZAZ" doc:name="Twitter"/>
    <mulexml:jaxb-context name="JAXB_Context" packageNames="generated" doc:name="JAXB Context"/>
    <file:connector name="File" readFromDirectory="/Users/aclima/Documents/Repositories/Systems_Integration/Assignment3/assignment3/smartphones" autoDelete="false" streaming="true" validateConnections="true" doc:name="File"/>

    <catch-exception-strategy name="Global_Catch_Exception_Strategy">
        <logger message="Oops, something went wrong... #[exception]" level="INFO" doc:name="Logger"/>
    </catch-exception-strategy>

    <flow name="send_schedulled_emails_flow">
	    <poll frequency="1000" doc:name="Poll">
	        <schedulers:cron-scheduler expression="0 0 0 1/1 * ? *"/>
	        <db:select config-ref="MySQL_Configuration" doc:name="Select validated emails from Database">
                <db:parameterized-query><![CDATA[SELECT * FROM subscriptions WHERE is_validated = 1;]]></db:parameterized-query>
	        </db:select>
	    </poll>
        <logger message="Sending poll emails to validated emails: #[message.payload]" level="INFO" doc:name="Logger"/>
        <foreach doc:name="For Each">
            <set-variable variableName="email" value="#[message.payload.'email']" doc:name="Set Email Variable"/>
            <db:select config-ref="MySQL_Configuration" doc:name="Select relevant smartphones from Database">
                <db:parameterized-query><![CDATA[SELECT * FROM smartphones WHERE (name LIKE #[message.payload.'name']) AND (brand LIKE #[message.payload.'brand']) AND (price BETWEEN #[message.payload.'min_price'] and #[message.payload.'max_price']);]]></db:parameterized-query>
            </db:select>
            <set-payload value="Here is your list of smartphones: #[message.payload]" doc:name="Set smartphone list content Payload"/>
            <smtp:outbound-endpoint host="smtp.gmail.com" port="587" user="is.spammer.2015%40gmail.com" password="vamoster20" connector-ref="Gmail" to="#[flowVars.email]" from="is.spammer" subject="Testing mule email" responseTimeout="10000" doc:name="Send smartphone list email"/>
            <logger message="'#[message.payload]'" level="INFO" doc:name="Logger"/>
        </foreach>
        <exception-strategy ref="Global_Catch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
    <sub-flow name="tweet_statistics_subflow">
        <logger message="Starting subflow for tweeting statistics" level="INFO" doc:name="Logger"/>
        <db:update config-ref="MySQL_Configuration" doc:name="Update number of sent tweets in Database">
            <db:parameterized-query><![CDATA[UPDATE statistics SET num_sent_tweets = num_sent_tweets + 1;]]></db:parameterized-query>
        </db:update>
        <db:select config-ref="MySQL_Configuration" doc:name="Select Statistics from Database">
            <db:parameterized-query><![CDATA[SELECT * FROM statistics;]]></db:parameterized-query>
        </db:select>
        <set-payload value="#[message.payload[0]]" doc:name="Set Statistics Payload"/>
        <logger message="statistics output: #[message.payload]" level="INFO" doc:name="Logger"/>
        <set-payload value="Statistics: #[message.payload.'num_updates_to_smartphones'] updates, #[message.payload.'num_cur_smartphones'] smartphones, #[message.payload.'num_sent_emails'] emails, #[message.payload.'num_sent_tweets'] tweets" doc:name="Set Tweet Payload"/>
        <logger message="twitter input: #[message.payload]" level="INFO" doc:name="Logger"/>
        <twitter:update-status config-ref="Twitter" status="#[message.payload]" doc:name="Tweet Statistics"/>
        <logger message="twitter output: #[message.payload]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="unmarshall_and_store_smartphones_subflow">
        <logger message="smartphones input: #[message.payload]" level="INFO" doc:name="Logger"/>
        <mulexml:jaxb-xml-to-object-transformer returnClass="generated.Smartphone" ignoreBadInput="true" jaxbContext-ref="JAXB_Context" doc:name="XML to JAXB Object"/>
        <set-variable variableName="smartphone" value="#[message.payload]" doc:name="Set Smartphone Variable"/>
        <choice doc:name="Should insert smartphone into Database">
            <when expression="#[flowVars.smartphone.isRelevant()]">
                <logger message="smartphone input: #[message.payload]" level="INFO" doc:name="Logger"/>
                <db:insert config-ref="MySQL_Configuration" doc:name="Insert Smartphone into Database">
                    <db:parameterized-query><![CDATA[INSERT INTO smartphones (technical_data, url, name, brand, currency, summary_data, price) VALUES (#[flowVars.smartphone.getTechnicalData().toString()], #[flowVars.smartphone.getUrl()], #[flowVars.smartphone.getName()], #[flowVars.smartphone.getBrand()], #[flowVars.smartphone.getCurrency()], #[flowVars.smartphone.getSummaryData()], #[flowVars.smartphone.getPrice()]);]]></db:parameterized-query>
                </db:insert>
                <logger message="smartphone output: #[message.payload]" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <logger message="Smartphone did not meet the requierments" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <logger message="smartphones output: #[message.payload]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="add_smartphones_and_send_tweet_subflow">
        <flow-ref name="unmarshall_and_store_smartphones_subflow" doc:name="unmarshall_and_store_smartphones_subflow"/>
        <choice doc:name="Should tweet about insertion">
            <when expression="payload.equals(1)">
                <flow-ref name="tweet_statistics_subflow" doc:name="tweet_statistics_subflow"/>
            </when>
            <otherwise>
                <logger message="add smartphones fail" level="ERROR" doc:name="Logger"/>
            </otherwise>
        </choice>
        <set-payload value="'#[message.payload]'" doc:name="Set Payload"/>
    </sub-flow>

    <flow name="add_smartphones_from_directory">
        <file:inbound-endpoint path="/Users/aclima/Documents/Repositories/Systems_Integration/Assignment3/assignment3/smartphones" connector-ref="File" pollingFrequency="10000" fileAge="5000" responseTimeout="10000" doc:name="File"/>
        <flow-ref name="add_smartphones_and_send_tweet_subflow" doc:name="add_smartphones_and_send_tweet_subflow"/>
        <exception-strategy ref="Global_Catch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>

    <flow name="add_subscription_and_send_confirmation_flow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/smartphones_mailinglist/add_subscription/" doc:name="HTTP"/>
        <logger message="subscription input: #[message.inboundProperties.'http.query.params'.email]" level="INFO" doc:name="Logger"/>
        <db:insert config-ref="MySQL_Configuration" doc:name="Insert Subscription into Database">
            <db:parameterized-query><![CDATA[INSERT INTO subscriptions (email, name, brand, min_price, max_price) VALUES (#[message.inboundProperties.'http.query.params'.email], #[message.inboundProperties.'http.query.params'.name], #[message.inboundProperties.'http.query.params'.brand], #[message.inboundProperties.'http.query.params'.min_price], #[message.inboundProperties.'http.query.params'.max_price]);]]></db:parameterized-query>
        </db:insert>
        <logger message="subscription output: #[message.payload]" level="INFO" doc:name="Logger"/>
        <db:update config-ref="MySQL_Configuration" doc:name="Update number fo sent emails in Database">
            <db:parameterized-query><![CDATA[UPDATE statistics SET num_sent_emails = num_sent_emails + 1;]]></db:parameterized-query>
        </db:update>
        <set-payload value="Validate your subscription here: http://localhost:8081/smartphones_mailinglist/validate_subscription/?email=#[message.inboundProperties.'http.query.params'.email]" doc:name="Set validation email content Payload"/>
        <logger message="notification email message: #[message.payload]" level="INFO" doc:name="Logger"/>
        <smtp:outbound-endpoint host="smtp.gmail.com" port="587" user="is.spammer.2015%40gmail.com" password="vamoster20" connector-ref="Gmail" to="#[message.inboundProperties.'http.query.params'.email]" from="is.spammer" subject="Please verify your email address" responseTimeout="10000" doc:name="Send notification email"/>
        <logger message="notification email output: #[message.payload]" level="INFO" doc:name="Logger"/>
        <set-payload value="'#[message.payload]'" doc:name="Set Payload"/>
        <exception-strategy ref="Global_Catch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="unsubscribe_flow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/smartphones_mailinglist/unsubscribe/" doc:name="HTTP"/>
        <logger message="#[message.inboundProperties.'http.query.params'.email]" level="INFO" doc:name="Logger"/>
        <db:delete config-ref="MySQL_Configuration" doc:name="Delete Subscription from Database">
            <db:parameterized-query><![CDATA[DELETE FROM subscriptions WHERE email = #[message.inboundProperties.'http.query.params'.email];]]></db:parameterized-query>
        </db:delete>
        <logger message="unsubscribe output: #[message.payload]" level="INFO" doc:name="Logger"/>
        <set-payload value="'#[message.payload]'" doc:name="Set Payload"/>
        <exception-strategy ref="Global_Catch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="validate_subscription_flow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/smartphones_mailinglist/validate_subscription/" doc:name="HTTP"/>
        <logger message="validate email input: #[message.inboundProperties.'http.query.params'.email]" level="INFO" doc:name="Logger"/>
        <db:update config-ref="MySQL_Configuration" doc:name="Validate email subscription in Database">
            <db:parameterized-query><![CDATA[UPDATE subscriptions SET is_validated = 1 WHERE email = #[message.inboundProperties.'http.query.params'.email];]]></db:parameterized-query>
        </db:update>
        <logger message="validate email output: #[message.payload]" level="INFO" doc:name="Logger"/>
        <set-payload value="'#[message.payload]'" doc:name="Set Payload"/>
        <exception-strategy ref="Global_Catch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
    
</mule>
